// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: monitoring/DataMonitoringService.proto

package monitoring

import (
	context "context"
	common "github.com/VertaAI/modeldb/protos/gen/go/protos/public/common"
	versioning "github.com/VertaAI/modeldb/protos/gen/go/protos/public/modeldb/versioning"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CountPerNGram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys   []*ListString `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Counts []uint64      `protobuf:"varint,2,rep,packed,name=counts,proto3" json:"counts,omitempty"`
}

func (x *CountPerNGram) Reset() {
	*x = CountPerNGram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPerNGram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPerNGram) ProtoMessage() {}

func (x *CountPerNGram) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPerNGram.ProtoReflect.Descriptor instead.
func (*CountPerNGram) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{0}
}

func (x *CountPerNGram) GetKeys() []*ListString {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *CountPerNGram) GetCounts() []uint64 {
	if x != nil {
		return x.Counts
	}
	return nil
}

type ListString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []string `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *ListString) Reset() {
	*x = ListString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListString) ProtoMessage() {}

func (x *ListString) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListString.ProtoReflect.Descriptor instead.
func (*ListString) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{1}
}

func (x *ListString) GetItem() []string {
	if x != nil {
		return x.Item
	}
	return nil
}

type FloatHistogram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketLimits []float32 `protobuf:"fixed32,1,rep,packed,name=bucket_limits,json=bucketLimits,proto3" json:"bucket_limits,omitempty"`
	BucketCounts []uint64  `protobuf:"varint,2,rep,packed,name=bucket_counts,json=bucketCounts,proto3" json:"bucket_counts,omitempty"`
}

func (x *FloatHistogram) Reset() {
	*x = FloatHistogram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatHistogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatHistogram) ProtoMessage() {}

func (x *FloatHistogram) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatHistogram.ProtoReflect.Descriptor instead.
func (*FloatHistogram) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{2}
}

func (x *FloatHistogram) GetBucketLimits() []float32 {
	if x != nil {
		return x.BucketLimits
	}
	return nil
}

func (x *FloatHistogram) GetBucketCounts() []uint64 {
	if x != nil {
		return x.BucketCounts
	}
	return nil
}

type DiscreteHistogram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels       []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	BucketCounts []uint64 `protobuf:"varint,2,rep,packed,name=bucket_counts,json=bucketCounts,proto3" json:"bucket_counts,omitempty"`
}

func (x *DiscreteHistogram) Reset() {
	*x = DiscreteHistogram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscreteHistogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscreteHistogram) ProtoMessage() {}

func (x *DiscreteHistogram) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscreteHistogram.ProtoReflect.Descriptor instead.
func (*DiscreteHistogram) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{3}
}

func (x *DiscreteHistogram) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *DiscreteHistogram) GetBucketCounts() []uint64 {
	if x != nil {
		return x.BucketCounts
	}
	return nil
}

type Profiler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Lambda *common.Artifact `protobuf:"bytes,2,opt,name=lambda,proto3" json:"lambda,omitempty"`
}

func (x *Profiler) Reset() {
	*x = Profiler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profiler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profiler) ProtoMessage() {}

func (x *Profiler) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profiler.ProtoReflect.Descriptor instead.
func (*Profiler) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{4}
}

func (x *Profiler) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Profiler) GetLambda() *common.Artifact {
	if x != nil {
		return x.Lambda
	}
	return nil
}

type ProfilerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Profilers []*Profiler `protobuf:"bytes,2,rep,name=profilers,proto3" json:"profilers,omitempty"`
}

func (x *ProfilerSet) Reset() {
	*x = ProfilerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfilerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilerSet) ProtoMessage() {}

func (x *ProfilerSet) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfilerSet.ProtoReflect.Descriptor instead.
func (*ProfilerSet) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{5}
}

func (x *ProfilerSet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProfilerSet) GetProfilers() []*Profiler {
	if x != nil {
		return x.Profilers
	}
	return nil
}

type DataFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSetBlob *versioning.DatasetBlob `protobuf:"bytes,1,opt,name=dataSetBlob,proto3" json:"dataSetBlob,omitempty"`
	Metadata    []*common.KeyValue      `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *DataFrame) Reset() {
	*x = DataFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFrame) ProtoMessage() {}

func (x *DataFrame) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFrame.ProtoReflect.Descriptor instead.
func (*DataFrame) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{6}
}

func (x *DataFrame) GetDataSetBlob() *versioning.DatasetBlob {
	if x != nil {
		return x.DataSetBlob
	}
	return nil
}

func (x *DataFrame) GetMetadata() []*common.KeyValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DataFrameBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataFrames []*DataFrame `protobuf:"bytes,1,rep,name=dataFrames,proto3" json:"dataFrames,omitempty"`
}

func (x *DataFrameBatch) Reset() {
	*x = DataFrameBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataFrameBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFrameBatch) ProtoMessage() {}

func (x *DataFrameBatch) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFrameBatch.ProtoReflect.Descriptor instead.
func (*DataFrameBatch) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{7}
}

func (x *DataFrameBatch) GetDataFrames() []*DataFrame {
	if x != nil {
		return x.DataFrames
	}
	return nil
}

type ParquetDataFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ParquetDataFrame) Reset() {
	*x = ParquetDataFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParquetDataFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParquetDataFrame) ProtoMessage() {}

func (x *ParquetDataFrame) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParquetDataFrame.ProtoReflect.Descriptor instead.
func (*ParquetDataFrame) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{8}
}

type ProfiledDataFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilerId        string            `protobuf:"bytes,1,opt,name=profilerId,proto3" json:"profilerId,omitempty"`
	Dataframe         *DataFrame        `protobuf:"bytes,2,opt,name=dataframe,proto3" json:"dataframe,omitempty"`
	ProfiledDataFrame *ParquetDataFrame `protobuf:"bytes,3,opt,name=profiledDataFrame,proto3" json:"profiledDataFrame,omitempty"`
}

func (x *ProfiledDataFrame) Reset() {
	*x = ProfiledDataFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfiledDataFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfiledDataFrame) ProtoMessage() {}

func (x *ProfiledDataFrame) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfiledDataFrame.ProtoReflect.Descriptor instead.
func (*ProfiledDataFrame) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{9}
}

func (x *ProfiledDataFrame) GetProfilerId() string {
	if x != nil {
		return x.ProfilerId
	}
	return ""
}

func (x *ProfiledDataFrame) GetDataframe() *DataFrame {
	if x != nil {
		return x.Dataframe
	}
	return nil
}

func (x *ProfiledDataFrame) GetProfiledDataFrame() *ParquetDataFrame {
	if x != nil {
		return x.ProfiledDataFrame
	}
	return nil
}

type ProfiledDataFrameBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataFrames []*ProfiledDataFrame `protobuf:"bytes,1,rep,name=dataFrames,proto3" json:"dataFrames,omitempty"`
}

func (x *ProfiledDataFrameBatch) Reset() {
	*x = ProfiledDataFrameBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfiledDataFrameBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfiledDataFrameBatch) ProtoMessage() {}

func (x *ProfiledDataFrameBatch) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfiledDataFrameBatch.ProtoReflect.Descriptor instead.
func (*ProfiledDataFrameBatch) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{10}
}

func (x *ProfiledDataFrameBatch) GetDataFrames() []*ProfiledDataFrame {
	if x != nil {
		return x.DataFrames
	}
	return nil
}

type GetProfilerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProfilerRequest) Reset() {
	*x = GetProfilerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfilerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfilerRequest) ProtoMessage() {}

func (x *GetProfilerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfilerRequest.ProtoReflect.Descriptor instead.
func (*GetProfilerRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{11}
}

func (x *GetProfilerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateProfilerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Lambda *common.Artifact `protobuf:"bytes,2,opt,name=lambda,proto3" json:"lambda,omitempty"`
}

func (x *CreateProfilerRequest) Reset() {
	*x = CreateProfilerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProfilerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProfilerRequest) ProtoMessage() {}

func (x *CreateProfilerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProfilerRequest.ProtoReflect.Descriptor instead.
func (*CreateProfilerRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{12}
}

func (x *CreateProfilerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateProfilerRequest) GetLambda() *common.Artifact {
	if x != nil {
		return x.Lambda
	}
	return nil
}

type UpdateProfilerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Lambda *common.Artifact `protobuf:"bytes,2,opt,name=lambda,proto3" json:"lambda,omitempty"`
}

func (x *UpdateProfilerRequest) Reset() {
	*x = UpdateProfilerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfilerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfilerRequest) ProtoMessage() {}

func (x *UpdateProfilerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfilerRequest.ProtoReflect.Descriptor instead.
func (*UpdateProfilerRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateProfilerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProfilerRequest) GetLambda() *common.Artifact {
	if x != nil {
		return x.Lambda
	}
	return nil
}

type DeleteProfilerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProfilerRequest) Reset() {
	*x = DeleteProfilerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProfilerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfilerRequest) ProtoMessage() {}

func (x *DeleteProfilerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfilerRequest.ProtoReflect.Descriptor instead.
func (*DeleteProfilerRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteProfilerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListProfilersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProfilersRequest) Reset() {
	*x = ListProfilersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfilersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilersRequest) ProtoMessage() {}

func (x *ListProfilersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilersRequest.ProtoReflect.Descriptor instead.
func (*ListProfilersRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{15}
}

type GetProfilerSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProfilerSetRequest) Reset() {
	*x = GetProfilerSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfilerSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfilerSetRequest) ProtoMessage() {}

func (x *GetProfilerSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfilerSetRequest.ProtoReflect.Descriptor instead.
func (*GetProfilerSetRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{16}
}

func (x *GetProfilerSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateProfilerSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Profilers []*Profiler `protobuf:"bytes,2,rep,name=profilers,proto3" json:"profilers,omitempty"`
}

func (x *CreateProfilerSetRequest) Reset() {
	*x = CreateProfilerSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProfilerSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProfilerSetRequest) ProtoMessage() {}

func (x *CreateProfilerSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProfilerSetRequest.ProtoReflect.Descriptor instead.
func (*CreateProfilerSetRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{17}
}

func (x *CreateProfilerSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateProfilerSetRequest) GetProfilers() []*Profiler {
	if x != nil {
		return x.Profilers
	}
	return nil
}

type AddProfilerToSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilerId    string `protobuf:"bytes,1,opt,name=profilerId,proto3" json:"profilerId,omitempty"`
	ProfilerSetId string `protobuf:"bytes,2,opt,name=profilerSetId,proto3" json:"profilerSetId,omitempty"`
}

func (x *AddProfilerToSetRequest) Reset() {
	*x = AddProfilerToSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProfilerToSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProfilerToSetRequest) ProtoMessage() {}

func (x *AddProfilerToSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProfilerToSetRequest.ProtoReflect.Descriptor instead.
func (*AddProfilerToSetRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{18}
}

func (x *AddProfilerToSetRequest) GetProfilerId() string {
	if x != nil {
		return x.ProfilerId
	}
	return ""
}

func (x *AddProfilerToSetRequest) GetProfilerSetId() string {
	if x != nil {
		return x.ProfilerSetId
	}
	return ""
}

type RemoveProfilerFromSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilerId    string `protobuf:"bytes,1,opt,name=profilerId,proto3" json:"profilerId,omitempty"`
	ProfilerSetId string `protobuf:"bytes,2,opt,name=profilerSetId,proto3" json:"profilerSetId,omitempty"`
}

func (x *RemoveProfilerFromSetRequest) Reset() {
	*x = RemoveProfilerFromSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProfilerFromSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProfilerFromSetRequest) ProtoMessage() {}

func (x *RemoveProfilerFromSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProfilerFromSetRequest.ProtoReflect.Descriptor instead.
func (*RemoveProfilerFromSetRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveProfilerFromSetRequest) GetProfilerId() string {
	if x != nil {
		return x.ProfilerId
	}
	return ""
}

func (x *RemoveProfilerFromSetRequest) GetProfilerSetId() string {
	if x != nil {
		return x.ProfilerSetId
	}
	return ""
}

type DeleteProfilerSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProfilerSetRequest) Reset() {
	*x = DeleteProfilerSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProfilerSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfilerSetRequest) ProtoMessage() {}

func (x *DeleteProfilerSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfilerSetRequest.ProtoReflect.Descriptor instead.
func (*DeleteProfilerSetRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteProfilerSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListProfilerSetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProfilerSetsRequest) Reset() {
	*x = ListProfilerSetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfilerSetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilerSetsRequest) ProtoMessage() {}

func (x *ListProfilerSetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilerSetsRequest.ProtoReflect.Descriptor instead.
func (*ListProfilerSetsRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{21}
}

type ProfileBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilerSetId  string          `protobuf:"bytes,1,opt,name=profilerSetId,proto3" json:"profilerSetId,omitempty"`
	DataFrameBatch *DataFrameBatch `protobuf:"bytes,2,opt,name=dataFrameBatch,proto3" json:"dataFrameBatch,omitempty"`
}

func (x *ProfileBatchRequest) Reset() {
	*x = ProfileBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileBatchRequest) ProtoMessage() {}

func (x *ProfileBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileBatchRequest.ProtoReflect.Descriptor instead.
func (*ProfileBatchRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{22}
}

func (x *ProfileBatchRequest) GetProfilerSetId() string {
	if x != nil {
		return x.ProfilerSetId
	}
	return ""
}

func (x *ProfileBatchRequest) GetDataFrameBatch() *DataFrameBatch {
	if x != nil {
		return x.DataFrameBatch
	}
	return nil
}

type GetAggregateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilerId      string `protobuf:"bytes,1,opt,name=profilerId,proto3" json:"profilerId,omitempty"`
	StartTimeMillis uint64 `protobuf:"varint,2,opt,name=start_time_millis,json=startTimeMillis,proto3" json:"start_time_millis,omitempty"`
	EndTimeMillis   uint64 `protobuf:"varint,3,opt,name=end_time_millis,json=endTimeMillis,proto3" json:"end_time_millis,omitempty"`
}

func (x *GetAggregateRequest) Reset() {
	*x = GetAggregateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregateRequest) ProtoMessage() {}

func (x *GetAggregateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregateRequest.ProtoReflect.Descriptor instead.
func (*GetAggregateRequest) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{23}
}

func (x *GetAggregateRequest) GetProfilerId() string {
	if x != nil {
		return x.ProfilerId
	}
	return ""
}

func (x *GetAggregateRequest) GetStartTimeMillis() uint64 {
	if x != nil {
		return x.StartTimeMillis
	}
	return 0
}

func (x *GetAggregateRequest) GetEndTimeMillis() uint64 {
	if x != nil {
		return x.EndTimeMillis
	}
	return 0
}

type GetProfilerRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiler *Profiler `protobuf:"bytes,1,opt,name=profiler,proto3" json:"profiler,omitempty"`
}

func (x *GetProfilerRequest_Response) Reset() {
	*x = GetProfilerRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfilerRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfilerRequest_Response) ProtoMessage() {}

func (x *GetProfilerRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfilerRequest_Response.ProtoReflect.Descriptor instead.
func (*GetProfilerRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetProfilerRequest_Response) GetProfiler() *Profiler {
	if x != nil {
		return x.Profiler
	}
	return nil
}

type CreateProfilerRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiler *Profiler `protobuf:"bytes,1,opt,name=profiler,proto3" json:"profiler,omitempty"`
}

func (x *CreateProfilerRequest_Response) Reset() {
	*x = CreateProfilerRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProfilerRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProfilerRequest_Response) ProtoMessage() {}

func (x *CreateProfilerRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProfilerRequest_Response.ProtoReflect.Descriptor instead.
func (*CreateProfilerRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CreateProfilerRequest_Response) GetProfiler() *Profiler {
	if x != nil {
		return x.Profiler
	}
	return nil
}

type UpdateProfilerRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiler *Profiler `protobuf:"bytes,1,opt,name=profiler,proto3" json:"profiler,omitempty"`
}

func (x *UpdateProfilerRequest_Response) Reset() {
	*x = UpdateProfilerRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfilerRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfilerRequest_Response) ProtoMessage() {}

func (x *UpdateProfilerRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfilerRequest_Response.ProtoReflect.Descriptor instead.
func (*UpdateProfilerRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{13, 0}
}

func (x *UpdateProfilerRequest_Response) GetProfiler() *Profiler {
	if x != nil {
		return x.Profiler
	}
	return nil
}

type DeleteProfilerRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProfilerRequest_Response) Reset() {
	*x = DeleteProfilerRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProfilerRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfilerRequest_Response) ProtoMessage() {}

func (x *DeleteProfilerRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfilerRequest_Response.ProtoReflect.Descriptor instead.
func (*DeleteProfilerRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{14, 0}
}

type ListProfilersRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profilers []*Profiler `protobuf:"bytes,1,rep,name=profilers,proto3" json:"profilers,omitempty"`
}

func (x *ListProfilersRequest_Response) Reset() {
	*x = ListProfilersRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfilersRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilersRequest_Response) ProtoMessage() {}

func (x *ListProfilersRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilersRequest_Response.ProtoReflect.Descriptor instead.
func (*ListProfilersRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ListProfilersRequest_Response) GetProfilers() []*Profiler {
	if x != nil {
		return x.Profilers
	}
	return nil
}

type GetProfilerSetRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilerSet *ProfilerSet `protobuf:"bytes,1,opt,name=profilerSet,proto3" json:"profilerSet,omitempty"`
}

func (x *GetProfilerSetRequest_Response) Reset() {
	*x = GetProfilerSetRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfilerSetRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfilerSetRequest_Response) ProtoMessage() {}

func (x *GetProfilerSetRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfilerSetRequest_Response.ProtoReflect.Descriptor instead.
func (*GetProfilerSetRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetProfilerSetRequest_Response) GetProfilerSet() *ProfilerSet {
	if x != nil {
		return x.ProfilerSet
	}
	return nil
}

type CreateProfilerSetRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilerSet *ProfilerSet `protobuf:"bytes,1,opt,name=profilerSet,proto3" json:"profilerSet,omitempty"`
}

func (x *CreateProfilerSetRequest_Response) Reset() {
	*x = CreateProfilerSetRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProfilerSetRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProfilerSetRequest_Response) ProtoMessage() {}

func (x *CreateProfilerSetRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProfilerSetRequest_Response.ProtoReflect.Descriptor instead.
func (*CreateProfilerSetRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{17, 0}
}

func (x *CreateProfilerSetRequest_Response) GetProfilerSet() *ProfilerSet {
	if x != nil {
		return x.ProfilerSet
	}
	return nil
}

type AddProfilerToSetRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilerSet *ProfilerSet `protobuf:"bytes,1,opt,name=profilerSet,proto3" json:"profilerSet,omitempty"`
}

func (x *AddProfilerToSetRequest_Response) Reset() {
	*x = AddProfilerToSetRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProfilerToSetRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProfilerToSetRequest_Response) ProtoMessage() {}

func (x *AddProfilerToSetRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProfilerToSetRequest_Response.ProtoReflect.Descriptor instead.
func (*AddProfilerToSetRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{18, 0}
}

func (x *AddProfilerToSetRequest_Response) GetProfilerSet() *ProfilerSet {
	if x != nil {
		return x.ProfilerSet
	}
	return nil
}

type RemoveProfilerFromSetRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilerSet *ProfilerSet `protobuf:"bytes,1,opt,name=profilerSet,proto3" json:"profilerSet,omitempty"`
}

func (x *RemoveProfilerFromSetRequest_Response) Reset() {
	*x = RemoveProfilerFromSetRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProfilerFromSetRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProfilerFromSetRequest_Response) ProtoMessage() {}

func (x *RemoveProfilerFromSetRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProfilerFromSetRequest_Response.ProtoReflect.Descriptor instead.
func (*RemoveProfilerFromSetRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{19, 0}
}

func (x *RemoveProfilerFromSetRequest_Response) GetProfilerSet() *ProfilerSet {
	if x != nil {
		return x.ProfilerSet
	}
	return nil
}

type DeleteProfilerSetRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProfilerSetRequest_Response) Reset() {
	*x = DeleteProfilerSetRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProfilerSetRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfilerSetRequest_Response) ProtoMessage() {}

func (x *DeleteProfilerSetRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfilerSetRequest_Response.ProtoReflect.Descriptor instead.
func (*DeleteProfilerSetRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{20, 0}
}

type ListProfilerSetsRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfilerSets []*ProfilerSet `protobuf:"bytes,1,rep,name=profilerSets,proto3" json:"profilerSets,omitempty"`
}

func (x *ListProfilerSetsRequest_Response) Reset() {
	*x = ListProfilerSetsRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfilerSetsRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilerSetsRequest_Response) ProtoMessage() {}

func (x *ListProfilerSetsRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilerSetsRequest_Response.ProtoReflect.Descriptor instead.
func (*ListProfilerSetsRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ListProfilerSetsRequest_Response) GetProfilerSets() []*ProfilerSet {
	if x != nil {
		return x.ProfilerSets
	}
	return nil
}

type ProfileBatchRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProfileBatchRequest_Response) Reset() {
	*x = ProfileBatchRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileBatchRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileBatchRequest_Response) ProtoMessage() {}

func (x *ProfileBatchRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileBatchRequest_Response.ProtoReflect.Descriptor instead.
func (*ProfileBatchRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{22, 0}
}

type GetAggregateRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Aggregate:
	//	*GetAggregateRequest_Response_CountPerNGram
	//	*GetAggregateRequest_Response_FloatHistogram
	//	*GetAggregateRequest_Response_DiscreteHistogram
	Aggregate isGetAggregateRequest_Response_Aggregate `protobuf_oneof:"aggregate"`
}

func (x *GetAggregateRequest_Response) Reset() {
	*x = GetAggregateRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DataMonitoringService_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregateRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregateRequest_Response) ProtoMessage() {}

func (x *GetAggregateRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DataMonitoringService_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregateRequest_Response.ProtoReflect.Descriptor instead.
func (*GetAggregateRequest_Response) Descriptor() ([]byte, []int) {
	return file_monitoring_DataMonitoringService_proto_rawDescGZIP(), []int{23, 0}
}

func (m *GetAggregateRequest_Response) GetAggregate() isGetAggregateRequest_Response_Aggregate {
	if m != nil {
		return m.Aggregate
	}
	return nil
}

func (x *GetAggregateRequest_Response) GetCountPerNGram() *CountPerNGram {
	if x, ok := x.GetAggregate().(*GetAggregateRequest_Response_CountPerNGram); ok {
		return x.CountPerNGram
	}
	return nil
}

func (x *GetAggregateRequest_Response) GetFloatHistogram() *FloatHistogram {
	if x, ok := x.GetAggregate().(*GetAggregateRequest_Response_FloatHistogram); ok {
		return x.FloatHistogram
	}
	return nil
}

func (x *GetAggregateRequest_Response) GetDiscreteHistogram() *DiscreteHistogram {
	if x, ok := x.GetAggregate().(*GetAggregateRequest_Response_DiscreteHistogram); ok {
		return x.DiscreteHistogram
	}
	return nil
}

type isGetAggregateRequest_Response_Aggregate interface {
	isGetAggregateRequest_Response_Aggregate()
}

type GetAggregateRequest_Response_CountPerNGram struct {
	CountPerNGram *CountPerNGram `protobuf:"bytes,1,opt,name=countPerNGram,proto3,oneof"`
}

type GetAggregateRequest_Response_FloatHistogram struct {
	FloatHistogram *FloatHistogram `protobuf:"bytes,2,opt,name=floatHistogram,proto3,oneof"`
}

type GetAggregateRequest_Response_DiscreteHistogram struct {
	DiscreteHistogram *DiscreteHistogram `protobuf:"bytes,3,opt,name=discreteHistogram,proto3,oneof"`
}

func (*GetAggregateRequest_Response_CountPerNGram) isGetAggregateRequest_Response_Aggregate() {}

func (*GetAggregateRequest_Response_FloatHistogram) isGetAggregateRequest_Response_Aggregate() {}

func (*GetAggregateRequest_Response_DiscreteHistogram) isGetAggregateRequest_Response_Aggregate() {}

var File_monitoring_DataMonitoringService_proto protoreflect.FileDescriptor

var file_monitoring_DataMonitoringService_proto_rawDesc = []byte{
	0x0a, 0x26, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5c, 0x0a, 0x0d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x4e, 0x47, 0x72, 0x61, 0x6d, 0x12, 0x33, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x5a, 0x0a, 0x0e, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x4d, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x06,
	0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x22, 0x5a, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x4a, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x52,
	0x0b, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x35, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x3e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x71, 0x75, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x11, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a,
	0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x61, 0x72, 0x71, 0x75, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x22, 0x60, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x46, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x22, 0x6b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x45, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x22, 0xa1, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x6c,
	0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x1a, 0x45,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x72, 0x22, 0xa1, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x31, 0x0a, 0x06, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x6d, 0x62,
	0x64, 0x61, 0x1a, 0x45, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x22,
	0x77, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x4e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x73, 0x1a, 0x4e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0x54, 0x6f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x49, 0x64, 0x1a, 0x4e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x4e, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x22, 0x36, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x6b, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x73,
	0x22, 0x94, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x4b,
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0e, 0x64, 0x61, 0x74,
	0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x03, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x1a, 0x8a, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4e, 0x47, 0x72, 0x61,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4e, 0x47, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x0d, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4e, 0x47, 0x72, 0x61, 0x6d, 0x12, 0x4d, 0x0a, 0x0e,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x0e, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x56, 0x0a, 0x11, 0x64,
	0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x72, 0x65, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x48, 0x00,
	0x52, 0x11, 0x64, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x32, 0xa1, 0x0c, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x0b, 0x67, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x2a, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x73, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0x12, 0x2a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x11,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x12, 0x2d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x10, 0x61, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x65, 0x74, 0x12, 0x2c,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72,
	0x54, 0x6f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x54, 0x6f,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x15, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x12,
	0x31, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x79, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x2d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x10, 0x6c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x74, 0x73, 0x12,
	0x2c, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x45, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x72, 0x74, 0x61, 0x41, 0x49, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_monitoring_DataMonitoringService_proto_rawDescOnce sync.Once
	file_monitoring_DataMonitoringService_proto_rawDescData = file_monitoring_DataMonitoringService_proto_rawDesc
)

func file_monitoring_DataMonitoringService_proto_rawDescGZIP() []byte {
	file_monitoring_DataMonitoringService_proto_rawDescOnce.Do(func() {
		file_monitoring_DataMonitoringService_proto_rawDescData = protoimpl.X.CompressGZIP(file_monitoring_DataMonitoringService_proto_rawDescData)
	})
	return file_monitoring_DataMonitoringService_proto_rawDescData
}

var file_monitoring_DataMonitoringService_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_monitoring_DataMonitoringService_proto_goTypes = []interface{}{
	(*CountPerNGram)(nil),                         // 0: ai.verta.monitoring.CountPerNGram
	(*ListString)(nil),                            // 1: ai.verta.monitoring.ListString
	(*FloatHistogram)(nil),                        // 2: ai.verta.monitoring.FloatHistogram
	(*DiscreteHistogram)(nil),                     // 3: ai.verta.monitoring.DiscreteHistogram
	(*Profiler)(nil),                              // 4: ai.verta.monitoring.Profiler
	(*ProfilerSet)(nil),                           // 5: ai.verta.monitoring.ProfilerSet
	(*DataFrame)(nil),                             // 6: ai.verta.monitoring.DataFrame
	(*DataFrameBatch)(nil),                        // 7: ai.verta.monitoring.DataFrameBatch
	(*ParquetDataFrame)(nil),                      // 8: ai.verta.monitoring.ParquetDataFrame
	(*ProfiledDataFrame)(nil),                     // 9: ai.verta.monitoring.ProfiledDataFrame
	(*ProfiledDataFrameBatch)(nil),                // 10: ai.verta.monitoring.ProfiledDataFrameBatch
	(*GetProfilerRequest)(nil),                    // 11: ai.verta.monitoring.GetProfilerRequest
	(*CreateProfilerRequest)(nil),                 // 12: ai.verta.monitoring.CreateProfilerRequest
	(*UpdateProfilerRequest)(nil),                 // 13: ai.verta.monitoring.UpdateProfilerRequest
	(*DeleteProfilerRequest)(nil),                 // 14: ai.verta.monitoring.DeleteProfilerRequest
	(*ListProfilersRequest)(nil),                  // 15: ai.verta.monitoring.ListProfilersRequest
	(*GetProfilerSetRequest)(nil),                 // 16: ai.verta.monitoring.GetProfilerSetRequest
	(*CreateProfilerSetRequest)(nil),              // 17: ai.verta.monitoring.CreateProfilerSetRequest
	(*AddProfilerToSetRequest)(nil),               // 18: ai.verta.monitoring.AddProfilerToSetRequest
	(*RemoveProfilerFromSetRequest)(nil),          // 19: ai.verta.monitoring.RemoveProfilerFromSetRequest
	(*DeleteProfilerSetRequest)(nil),              // 20: ai.verta.monitoring.DeleteProfilerSetRequest
	(*ListProfilerSetsRequest)(nil),               // 21: ai.verta.monitoring.ListProfilerSetsRequest
	(*ProfileBatchRequest)(nil),                   // 22: ai.verta.monitoring.ProfileBatchRequest
	(*GetAggregateRequest)(nil),                   // 23: ai.verta.monitoring.GetAggregateRequest
	(*GetProfilerRequest_Response)(nil),           // 24: ai.verta.monitoring.GetProfilerRequest.Response
	(*CreateProfilerRequest_Response)(nil),        // 25: ai.verta.monitoring.CreateProfilerRequest.Response
	(*UpdateProfilerRequest_Response)(nil),        // 26: ai.verta.monitoring.UpdateProfilerRequest.Response
	(*DeleteProfilerRequest_Response)(nil),        // 27: ai.verta.monitoring.DeleteProfilerRequest.Response
	(*ListProfilersRequest_Response)(nil),         // 28: ai.verta.monitoring.ListProfilersRequest.Response
	(*GetProfilerSetRequest_Response)(nil),        // 29: ai.verta.monitoring.GetProfilerSetRequest.Response
	(*CreateProfilerSetRequest_Response)(nil),     // 30: ai.verta.monitoring.CreateProfilerSetRequest.Response
	(*AddProfilerToSetRequest_Response)(nil),      // 31: ai.verta.monitoring.AddProfilerToSetRequest.Response
	(*RemoveProfilerFromSetRequest_Response)(nil), // 32: ai.verta.monitoring.RemoveProfilerFromSetRequest.Response
	(*DeleteProfilerSetRequest_Response)(nil),     // 33: ai.verta.monitoring.DeleteProfilerSetRequest.Response
	(*ListProfilerSetsRequest_Response)(nil),      // 34: ai.verta.monitoring.ListProfilerSetsRequest.Response
	(*ProfileBatchRequest_Response)(nil),          // 35: ai.verta.monitoring.ProfileBatchRequest.Response
	(*GetAggregateRequest_Response)(nil),          // 36: ai.verta.monitoring.GetAggregateRequest.Response
	(*common.Artifact)(nil),                       // 37: ai.verta.common.Artifact
	(*versioning.DatasetBlob)(nil),                // 38: ai.verta.modeldb.versioning.DatasetBlob
	(*common.KeyValue)(nil),                       // 39: ai.verta.common.KeyValue
}
var file_monitoring_DataMonitoringService_proto_depIdxs = []int32{
	1,  // 0: ai.verta.monitoring.CountPerNGram.keys:type_name -> ai.verta.monitoring.ListString
	37, // 1: ai.verta.monitoring.Profiler.lambda:type_name -> ai.verta.common.Artifact
	4,  // 2: ai.verta.monitoring.ProfilerSet.profilers:type_name -> ai.verta.monitoring.Profiler
	38, // 3: ai.verta.monitoring.DataFrame.dataSetBlob:type_name -> ai.verta.modeldb.versioning.DatasetBlob
	39, // 4: ai.verta.monitoring.DataFrame.metadata:type_name -> ai.verta.common.KeyValue
	6,  // 5: ai.verta.monitoring.DataFrameBatch.dataFrames:type_name -> ai.verta.monitoring.DataFrame
	6,  // 6: ai.verta.monitoring.ProfiledDataFrame.dataframe:type_name -> ai.verta.monitoring.DataFrame
	8,  // 7: ai.verta.monitoring.ProfiledDataFrame.profiledDataFrame:type_name -> ai.verta.monitoring.ParquetDataFrame
	9,  // 8: ai.verta.monitoring.ProfiledDataFrameBatch.dataFrames:type_name -> ai.verta.monitoring.ProfiledDataFrame
	37, // 9: ai.verta.monitoring.CreateProfilerRequest.lambda:type_name -> ai.verta.common.Artifact
	37, // 10: ai.verta.monitoring.UpdateProfilerRequest.lambda:type_name -> ai.verta.common.Artifact
	4,  // 11: ai.verta.monitoring.CreateProfilerSetRequest.profilers:type_name -> ai.verta.monitoring.Profiler
	7,  // 12: ai.verta.monitoring.ProfileBatchRequest.dataFrameBatch:type_name -> ai.verta.monitoring.DataFrameBatch
	4,  // 13: ai.verta.monitoring.GetProfilerRequest.Response.profiler:type_name -> ai.verta.monitoring.Profiler
	4,  // 14: ai.verta.monitoring.CreateProfilerRequest.Response.profiler:type_name -> ai.verta.monitoring.Profiler
	4,  // 15: ai.verta.monitoring.UpdateProfilerRequest.Response.profiler:type_name -> ai.verta.monitoring.Profiler
	4,  // 16: ai.verta.monitoring.ListProfilersRequest.Response.profilers:type_name -> ai.verta.monitoring.Profiler
	5,  // 17: ai.verta.monitoring.GetProfilerSetRequest.Response.profilerSet:type_name -> ai.verta.monitoring.ProfilerSet
	5,  // 18: ai.verta.monitoring.CreateProfilerSetRequest.Response.profilerSet:type_name -> ai.verta.monitoring.ProfilerSet
	5,  // 19: ai.verta.monitoring.AddProfilerToSetRequest.Response.profilerSet:type_name -> ai.verta.monitoring.ProfilerSet
	5,  // 20: ai.verta.monitoring.RemoveProfilerFromSetRequest.Response.profilerSet:type_name -> ai.verta.monitoring.ProfilerSet
	5,  // 21: ai.verta.monitoring.ListProfilerSetsRequest.Response.profilerSets:type_name -> ai.verta.monitoring.ProfilerSet
	0,  // 22: ai.verta.monitoring.GetAggregateRequest.Response.countPerNGram:type_name -> ai.verta.monitoring.CountPerNGram
	2,  // 23: ai.verta.monitoring.GetAggregateRequest.Response.floatHistogram:type_name -> ai.verta.monitoring.FloatHistogram
	3,  // 24: ai.verta.monitoring.GetAggregateRequest.Response.discreteHistogram:type_name -> ai.verta.monitoring.DiscreteHistogram
	11, // 25: ai.verta.monitoring.DataMonitoringService.getProfiler:input_type -> ai.verta.monitoring.GetProfilerRequest
	12, // 26: ai.verta.monitoring.DataMonitoringService.createProfiler:input_type -> ai.verta.monitoring.CreateProfilerRequest
	13, // 27: ai.verta.monitoring.DataMonitoringService.updateProfiler:input_type -> ai.verta.monitoring.UpdateProfilerRequest
	14, // 28: ai.verta.monitoring.DataMonitoringService.deleteProfiler:input_type -> ai.verta.monitoring.DeleteProfilerRequest
	15, // 29: ai.verta.monitoring.DataMonitoringService.listProfilers:input_type -> ai.verta.monitoring.ListProfilersRequest
	16, // 30: ai.verta.monitoring.DataMonitoringService.getProfilerSet:input_type -> ai.verta.monitoring.GetProfilerSetRequest
	17, // 31: ai.verta.monitoring.DataMonitoringService.createProfilerSet:input_type -> ai.verta.monitoring.CreateProfilerSetRequest
	18, // 32: ai.verta.monitoring.DataMonitoringService.addProfilerToSet:input_type -> ai.verta.monitoring.AddProfilerToSetRequest
	19, // 33: ai.verta.monitoring.DataMonitoringService.removeProfilerFromSet:input_type -> ai.verta.monitoring.RemoveProfilerFromSetRequest
	20, // 34: ai.verta.monitoring.DataMonitoringService.deleteProfilerSet:input_type -> ai.verta.monitoring.DeleteProfilerSetRequest
	21, // 35: ai.verta.monitoring.DataMonitoringService.listProfilerSets:input_type -> ai.verta.monitoring.ListProfilerSetsRequest
	22, // 36: ai.verta.monitoring.DataMonitoringService.profileBatch:input_type -> ai.verta.monitoring.ProfileBatchRequest
	23, // 37: ai.verta.monitoring.DataMonitoringService.getAggregate:input_type -> ai.verta.monitoring.GetAggregateRequest
	24, // 38: ai.verta.monitoring.DataMonitoringService.getProfiler:output_type -> ai.verta.monitoring.GetProfilerRequest.Response
	25, // 39: ai.verta.monitoring.DataMonitoringService.createProfiler:output_type -> ai.verta.monitoring.CreateProfilerRequest.Response
	26, // 40: ai.verta.monitoring.DataMonitoringService.updateProfiler:output_type -> ai.verta.monitoring.UpdateProfilerRequest.Response
	27, // 41: ai.verta.monitoring.DataMonitoringService.deleteProfiler:output_type -> ai.verta.monitoring.DeleteProfilerRequest.Response
	28, // 42: ai.verta.monitoring.DataMonitoringService.listProfilers:output_type -> ai.verta.monitoring.ListProfilersRequest.Response
	29, // 43: ai.verta.monitoring.DataMonitoringService.getProfilerSet:output_type -> ai.verta.monitoring.GetProfilerSetRequest.Response
	30, // 44: ai.verta.monitoring.DataMonitoringService.createProfilerSet:output_type -> ai.verta.monitoring.CreateProfilerSetRequest.Response
	31, // 45: ai.verta.monitoring.DataMonitoringService.addProfilerToSet:output_type -> ai.verta.monitoring.AddProfilerToSetRequest.Response
	32, // 46: ai.verta.monitoring.DataMonitoringService.removeProfilerFromSet:output_type -> ai.verta.monitoring.RemoveProfilerFromSetRequest.Response
	27, // 47: ai.verta.monitoring.DataMonitoringService.deleteProfilerSet:output_type -> ai.verta.monitoring.DeleteProfilerRequest.Response
	34, // 48: ai.verta.monitoring.DataMonitoringService.listProfilerSets:output_type -> ai.verta.monitoring.ListProfilerSetsRequest.Response
	35, // 49: ai.verta.monitoring.DataMonitoringService.profileBatch:output_type -> ai.verta.monitoring.ProfileBatchRequest.Response
	36, // 50: ai.verta.monitoring.DataMonitoringService.getAggregate:output_type -> ai.verta.monitoring.GetAggregateRequest.Response
	38, // [38:51] is the sub-list for method output_type
	25, // [25:38] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_monitoring_DataMonitoringService_proto_init() }
func file_monitoring_DataMonitoringService_proto_init() {
	if File_monitoring_DataMonitoringService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_monitoring_DataMonitoringService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPerNGram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatHistogram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscreteHistogram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profiler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfilerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataFrameBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParquetDataFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfiledDataFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfiledDataFrameBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfilerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProfilerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfilerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProfilerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfilersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfilerSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProfilerSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProfilerToSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProfilerFromSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProfilerSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfilerSetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfilerRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProfilerRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfilerRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProfilerRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfilersRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfilerSetRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProfilerSetRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProfilerToSetRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProfilerFromSetRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProfilerSetRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfilerSetsRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileBatchRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DataMonitoringService_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregateRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_monitoring_DataMonitoringService_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*GetAggregateRequest_Response_CountPerNGram)(nil),
		(*GetAggregateRequest_Response_FloatHistogram)(nil),
		(*GetAggregateRequest_Response_DiscreteHistogram)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_monitoring_DataMonitoringService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitoring_DataMonitoringService_proto_goTypes,
		DependencyIndexes: file_monitoring_DataMonitoringService_proto_depIdxs,
		MessageInfos:      file_monitoring_DataMonitoringService_proto_msgTypes,
	}.Build()
	File_monitoring_DataMonitoringService_proto = out.File
	file_monitoring_DataMonitoringService_proto_rawDesc = nil
	file_monitoring_DataMonitoringService_proto_goTypes = nil
	file_monitoring_DataMonitoringService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataMonitoringServiceClient is the client API for DataMonitoringService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataMonitoringServiceClient interface {
	GetProfiler(ctx context.Context, in *GetProfilerRequest, opts ...grpc.CallOption) (*GetProfilerRequest_Response, error)
	CreateProfiler(ctx context.Context, in *CreateProfilerRequest, opts ...grpc.CallOption) (*CreateProfilerRequest_Response, error)
	UpdateProfiler(ctx context.Context, in *UpdateProfilerRequest, opts ...grpc.CallOption) (*UpdateProfilerRequest_Response, error)
	DeleteProfiler(ctx context.Context, in *DeleteProfilerRequest, opts ...grpc.CallOption) (*DeleteProfilerRequest_Response, error)
	ListProfilers(ctx context.Context, in *ListProfilersRequest, opts ...grpc.CallOption) (*ListProfilersRequest_Response, error)
	GetProfilerSet(ctx context.Context, in *GetProfilerSetRequest, opts ...grpc.CallOption) (*GetProfilerSetRequest_Response, error)
	CreateProfilerSet(ctx context.Context, in *CreateProfilerSetRequest, opts ...grpc.CallOption) (*CreateProfilerSetRequest_Response, error)
	AddProfilerToSet(ctx context.Context, in *AddProfilerToSetRequest, opts ...grpc.CallOption) (*AddProfilerToSetRequest_Response, error)
	RemoveProfilerFromSet(ctx context.Context, in *RemoveProfilerFromSetRequest, opts ...grpc.CallOption) (*RemoveProfilerFromSetRequest_Response, error)
	DeleteProfilerSet(ctx context.Context, in *DeleteProfilerSetRequest, opts ...grpc.CallOption) (*DeleteProfilerRequest_Response, error)
	ListProfilerSets(ctx context.Context, in *ListProfilerSetsRequest, opts ...grpc.CallOption) (*ListProfilerSetsRequest_Response, error)
	ProfileBatch(ctx context.Context, in *ProfileBatchRequest, opts ...grpc.CallOption) (*ProfileBatchRequest_Response, error)
	GetAggregate(ctx context.Context, in *GetAggregateRequest, opts ...grpc.CallOption) (*GetAggregateRequest_Response, error)
}

type dataMonitoringServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDataMonitoringServiceClient(cc grpc.ClientConnInterface) DataMonitoringServiceClient {
	return &dataMonitoringServiceClient{cc}
}

func (c *dataMonitoringServiceClient) GetProfiler(ctx context.Context, in *GetProfilerRequest, opts ...grpc.CallOption) (*GetProfilerRequest_Response, error) {
	out := new(GetProfilerRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/getProfiler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) CreateProfiler(ctx context.Context, in *CreateProfilerRequest, opts ...grpc.CallOption) (*CreateProfilerRequest_Response, error) {
	out := new(CreateProfilerRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/createProfiler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) UpdateProfiler(ctx context.Context, in *UpdateProfilerRequest, opts ...grpc.CallOption) (*UpdateProfilerRequest_Response, error) {
	out := new(UpdateProfilerRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/updateProfiler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) DeleteProfiler(ctx context.Context, in *DeleteProfilerRequest, opts ...grpc.CallOption) (*DeleteProfilerRequest_Response, error) {
	out := new(DeleteProfilerRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/deleteProfiler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) ListProfilers(ctx context.Context, in *ListProfilersRequest, opts ...grpc.CallOption) (*ListProfilersRequest_Response, error) {
	out := new(ListProfilersRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/listProfilers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) GetProfilerSet(ctx context.Context, in *GetProfilerSetRequest, opts ...grpc.CallOption) (*GetProfilerSetRequest_Response, error) {
	out := new(GetProfilerSetRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/getProfilerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) CreateProfilerSet(ctx context.Context, in *CreateProfilerSetRequest, opts ...grpc.CallOption) (*CreateProfilerSetRequest_Response, error) {
	out := new(CreateProfilerSetRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/createProfilerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) AddProfilerToSet(ctx context.Context, in *AddProfilerToSetRequest, opts ...grpc.CallOption) (*AddProfilerToSetRequest_Response, error) {
	out := new(AddProfilerToSetRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/addProfilerToSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) RemoveProfilerFromSet(ctx context.Context, in *RemoveProfilerFromSetRequest, opts ...grpc.CallOption) (*RemoveProfilerFromSetRequest_Response, error) {
	out := new(RemoveProfilerFromSetRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/removeProfilerFromSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) DeleteProfilerSet(ctx context.Context, in *DeleteProfilerSetRequest, opts ...grpc.CallOption) (*DeleteProfilerRequest_Response, error) {
	out := new(DeleteProfilerRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/deleteProfilerSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) ListProfilerSets(ctx context.Context, in *ListProfilerSetsRequest, opts ...grpc.CallOption) (*ListProfilerSetsRequest_Response, error) {
	out := new(ListProfilerSetsRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/listProfilerSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) ProfileBatch(ctx context.Context, in *ProfileBatchRequest, opts ...grpc.CallOption) (*ProfileBatchRequest_Response, error) {
	out := new(ProfileBatchRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/profileBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataMonitoringServiceClient) GetAggregate(ctx context.Context, in *GetAggregateRequest, opts ...grpc.CallOption) (*GetAggregateRequest_Response, error) {
	out := new(GetAggregateRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.monitoring.DataMonitoringService/getAggregate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataMonitoringServiceServer is the server API for DataMonitoringService service.
type DataMonitoringServiceServer interface {
	GetProfiler(context.Context, *GetProfilerRequest) (*GetProfilerRequest_Response, error)
	CreateProfiler(context.Context, *CreateProfilerRequest) (*CreateProfilerRequest_Response, error)
	UpdateProfiler(context.Context, *UpdateProfilerRequest) (*UpdateProfilerRequest_Response, error)
	DeleteProfiler(context.Context, *DeleteProfilerRequest) (*DeleteProfilerRequest_Response, error)
	ListProfilers(context.Context, *ListProfilersRequest) (*ListProfilersRequest_Response, error)
	GetProfilerSet(context.Context, *GetProfilerSetRequest) (*GetProfilerSetRequest_Response, error)
	CreateProfilerSet(context.Context, *CreateProfilerSetRequest) (*CreateProfilerSetRequest_Response, error)
	AddProfilerToSet(context.Context, *AddProfilerToSetRequest) (*AddProfilerToSetRequest_Response, error)
	RemoveProfilerFromSet(context.Context, *RemoveProfilerFromSetRequest) (*RemoveProfilerFromSetRequest_Response, error)
	DeleteProfilerSet(context.Context, *DeleteProfilerSetRequest) (*DeleteProfilerRequest_Response, error)
	ListProfilerSets(context.Context, *ListProfilerSetsRequest) (*ListProfilerSetsRequest_Response, error)
	ProfileBatch(context.Context, *ProfileBatchRequest) (*ProfileBatchRequest_Response, error)
	GetAggregate(context.Context, *GetAggregateRequest) (*GetAggregateRequest_Response, error)
}

// UnimplementedDataMonitoringServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataMonitoringServiceServer struct {
}

func (*UnimplementedDataMonitoringServiceServer) GetProfiler(context.Context, *GetProfilerRequest) (*GetProfilerRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfiler not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) CreateProfiler(context.Context, *CreateProfilerRequest) (*CreateProfilerRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProfiler not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) UpdateProfiler(context.Context, *UpdateProfilerRequest) (*UpdateProfilerRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProfiler not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) DeleteProfiler(context.Context, *DeleteProfilerRequest) (*DeleteProfilerRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProfiler not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) ListProfilers(context.Context, *ListProfilersRequest) (*ListProfilersRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProfilers not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) GetProfilerSet(context.Context, *GetProfilerSetRequest) (*GetProfilerSetRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfilerSet not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) CreateProfilerSet(context.Context, *CreateProfilerSetRequest) (*CreateProfilerSetRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProfilerSet not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) AddProfilerToSet(context.Context, *AddProfilerToSetRequest) (*AddProfilerToSetRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProfilerToSet not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) RemoveProfilerFromSet(context.Context, *RemoveProfilerFromSetRequest) (*RemoveProfilerFromSetRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveProfilerFromSet not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) DeleteProfilerSet(context.Context, *DeleteProfilerSetRequest) (*DeleteProfilerRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProfilerSet not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) ListProfilerSets(context.Context, *ListProfilerSetsRequest) (*ListProfilerSetsRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProfilerSets not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) ProfileBatch(context.Context, *ProfileBatchRequest) (*ProfileBatchRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProfileBatch not implemented")
}
func (*UnimplementedDataMonitoringServiceServer) GetAggregate(context.Context, *GetAggregateRequest) (*GetAggregateRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAggregate not implemented")
}

func RegisterDataMonitoringServiceServer(s *grpc.Server, srv DataMonitoringServiceServer) {
	s.RegisterService(&_DataMonitoringService_serviceDesc, srv)
}

func _DataMonitoringService_GetProfiler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfilerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).GetProfiler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/GetProfiler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).GetProfiler(ctx, req.(*GetProfilerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_CreateProfiler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProfilerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).CreateProfiler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/CreateProfiler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).CreateProfiler(ctx, req.(*CreateProfilerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_UpdateProfiler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProfilerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).UpdateProfiler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/UpdateProfiler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).UpdateProfiler(ctx, req.(*UpdateProfilerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_DeleteProfiler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProfilerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).DeleteProfiler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/DeleteProfiler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).DeleteProfiler(ctx, req.(*DeleteProfilerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_ListProfilers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProfilersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).ListProfilers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/ListProfilers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).ListProfilers(ctx, req.(*ListProfilersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_GetProfilerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfilerSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).GetProfilerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/GetProfilerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).GetProfilerSet(ctx, req.(*GetProfilerSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_CreateProfilerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProfilerSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).CreateProfilerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/CreateProfilerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).CreateProfilerSet(ctx, req.(*CreateProfilerSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_AddProfilerToSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProfilerToSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).AddProfilerToSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/AddProfilerToSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).AddProfilerToSet(ctx, req.(*AddProfilerToSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_RemoveProfilerFromSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveProfilerFromSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).RemoveProfilerFromSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/RemoveProfilerFromSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).RemoveProfilerFromSet(ctx, req.(*RemoveProfilerFromSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_DeleteProfilerSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProfilerSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).DeleteProfilerSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/DeleteProfilerSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).DeleteProfilerSet(ctx, req.(*DeleteProfilerSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_ListProfilerSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProfilerSetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).ListProfilerSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/ListProfilerSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).ListProfilerSets(ctx, req.(*ListProfilerSetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_ProfileBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileBatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).ProfileBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/ProfileBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).ProfileBatch(ctx, req.(*ProfileBatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataMonitoringService_GetAggregate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAggregateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataMonitoringServiceServer).GetAggregate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.monitoring.DataMonitoringService/GetAggregate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataMonitoringServiceServer).GetAggregate(ctx, req.(*GetAggregateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataMonitoringService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.monitoring.DataMonitoringService",
	HandlerType: (*DataMonitoringServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getProfiler",
			Handler:    _DataMonitoringService_GetProfiler_Handler,
		},
		{
			MethodName: "createProfiler",
			Handler:    _DataMonitoringService_CreateProfiler_Handler,
		},
		{
			MethodName: "updateProfiler",
			Handler:    _DataMonitoringService_UpdateProfiler_Handler,
		},
		{
			MethodName: "deleteProfiler",
			Handler:    _DataMonitoringService_DeleteProfiler_Handler,
		},
		{
			MethodName: "listProfilers",
			Handler:    _DataMonitoringService_ListProfilers_Handler,
		},
		{
			MethodName: "getProfilerSet",
			Handler:    _DataMonitoringService_GetProfilerSet_Handler,
		},
		{
			MethodName: "createProfilerSet",
			Handler:    _DataMonitoringService_CreateProfilerSet_Handler,
		},
		{
			MethodName: "addProfilerToSet",
			Handler:    _DataMonitoringService_AddProfilerToSet_Handler,
		},
		{
			MethodName: "removeProfilerFromSet",
			Handler:    _DataMonitoringService_RemoveProfilerFromSet_Handler,
		},
		{
			MethodName: "deleteProfilerSet",
			Handler:    _DataMonitoringService_DeleteProfilerSet_Handler,
		},
		{
			MethodName: "listProfilerSets",
			Handler:    _DataMonitoringService_ListProfilerSets_Handler,
		},
		{
			MethodName: "profileBatch",
			Handler:    _DataMonitoringService_ProfileBatch_Handler,
		},
		{
			MethodName: "getAggregate",
			Handler:    _DataMonitoringService_GetAggregate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "monitoring/DataMonitoringService.proto",
}
