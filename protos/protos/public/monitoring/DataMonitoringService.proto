syntax = "proto3";

package ai.verta.monitoring;
option go_package = "github.com/VertaAI/modeldb/protos/gen/go/protos/public/monitoring";

option java_multiple_files = true;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "common/CommonService.proto";
import "registry/RegistryService.proto";
import "modeldb/versioning/Environment.proto";

// Aggregate data formats
message CountPerNGram {
  repeated ListString keys = 1;
  repeated uint64 counts = 2;
}

message ListString {
  repeated string item = 1;
}

message FloatHistogram {
  repeated float bucket_limits = 1;
  repeated uint64 bucket_counts = 2;
}

message DiscreteHistogram {
  repeated string labels = 1;
  repeated uint64 bucket_counts = 2;
}

// Profiler, ProfilerSet and ProfiledModel

message Profiler {
  string id = 1;
  string name = 2;
  common.Artifact profiler_lambda = 3; // lambdaClass?  lambdaCode? lambda?
}

message ProfilerSet {
  string id = 1;
  string name = 2;
  repeated Profiler profilers = 3;
}

message ProfiledModel {
  string id = 1;
  string name = 2;
  string model_id = 4;
  string endpoint_id = 6;
  common.KeyValue metadata = 7;
  ProfilerSet profilers = 8;
}

// ProfiledAggregate and ProfiledAggregateBatch

message ProfiledAggregate {
  ProfiledModel profiled_model = 1;
  string profiler_id = 2;
  oneof aggregate {
    CountPerNGram count_per_ngram = 3;
    FloatHistogram float_histogram = 4;
    DiscreteHistogram discrete_histogram = 5;
  }
}

message ProfiledAggregateBatch {
  repeated ProfiledAggregate aggregates = 1;
}

// Profiler CRUD

message GetProfilerRequest {
  string id = 1;

  message Response {
    Profiler profiler = 1;
  }
}

message CreateProfilerRequest {
  string id = 1;
  string name = 2;
  common.Artifact lambda = 3;

  message Response {
    Profiler profiler = 1;
  }
}

message UpdateProfilerRequest {
  string id = 1;
  string name = 2;
  common.Artifact lambda = 3;

  message Response {
    Profiler profiler = 1;
  }
}

message DeleteProfilerRequest {
  string id = 1;

  message Response {
  }
}

message ListProfilersRequest {
  message Response {
    repeated Profiler profilers = 1;
  }
}

// ProfilerSet CRUD

message GetProfilerSetRequest {
  string id = 1;

  message Response {
    ProfilerSet profiler_set = 1;
  }
}

message CreateProfilerSetRequest {
  string id = 1;
  string name = 2;
  repeated Profiler profilers = 3;

  message Response {
    ProfilerSet profiler_set = 1;
  }
}

message UpdateProfilerSetRequest {
  string id = 1;
  string name = 2;

  message Response {
    ProfilerSet profiler_set = 1;
  }
}

message AddProfilerToSetRequest {
  string profiler_id = 1;
  string profiler_set_id = 2;

  message Response {
    ProfilerSet profiler_set = 1;
  }
}

message RemoveProfilerFromSetRequest {
  string profiler_id = 1;
  string profiler_set_id = 2;

  message Response {
    ProfilerSet profiler_set = 1;
  }
}

message DeleteProfilerSetRequest {
  string id = 1;

  message Response {
  }
}

message ListProfilerSetsRequest {
  message Response {
    repeated ProfilerSet profiler_sets = 1;
  }
}

// ProfiledModel CRUD

message GetProfiledModelRequest {
  string profile_model_id = 1;

  message Response {
    ProfiledModel profiled_model = 1;
  }
}

message CreateProfiledModelRequest {
  string name = 1;
  string model_id = 2;
  string endpoint_id = 4;
  common.KeyValue metadata = 5;
  string profiler_set_id = 6;

  message Response {
    ProfiledModel model = 1;
  }
}

// Not yet sure what (if anything) should be modifiable.
message UpdateProfiledModelRequest {
  string profiled_model_id = 1;
  string name = 2;

  message Response {
    ProfiledModel profiled_model = 1;
  }
}

message DeleteProfiledModelRequest {
  string profiled_model_id = 1;
  message Response {
  }
}

message ListProfiledModelsRequest {
  message Response {
    repeated ProfiledModel profiled_models = 1;
  }
}

// Aggregate Data Fetching

message GetAggregateRequest {
  string model_id = 1;
  string profiler_id = 2;
  uint64 start_time_millis = 3;
  uint64 end_time_millis = 4;

  message Response {
    oneof aggregate {
      CountPerNGram count_per_ngram = 1;
      FloatHistogram float_histogram = 2;
      DiscreteHistogram discrete_histogram = 3;
    }
  }
}

// Aggregate Data Storage

message StoreProfiledAggregateBatchRequest {
  ProfiledAggregateBatch batch = 1;

  message Response {
  }
}

// Service definitions
service DataMonitoringService {
  rpc getProfiler(GetProfilerRequest) returns (GetProfilerRequest.Response) {
    option (google.api.http) = {
      get: "/v1/profiler/getProfiler"
    };
  };

  rpc createProfiler(CreateProfilerRequest) returns (CreateProfilerRequest.Response) {
    option (google.api.http) = {
      put: "/v1/profiler/createProfiler"
      body: "*"
    };
  };

  rpc updateProfiler(UpdateProfilerRequest) returns (UpdateProfilerRequest.Response) {
    option (google.api.http) = {
      patch: "/v1/profile/updateProfile"
      body: "*"
    };
  };

  rpc deleteProfiler(DeleteProfilerRequest) returns (DeleteProfilerRequest.Response) {
    option (google.api.http) = {
      delete: "/v1/profile/deleteProfiler"
      body: "*"
    };
  };

  rpc listProfilers(ListProfilersRequest) returns (ListProfilersRequest.Response) {
    option (google.api.http) = {
      get: "/v1/profiler/listProfilers"
    };
  };

  rpc getProfilerSet(GetProfilerSetRequest) returns (GetProfilerSetRequest.Response) {
    option (google.api.http) = {
      get: "/v1/profiler-set/getProfilerSet"
    };
  };

  rpc createProfilerSet(CreateProfilerSetRequest) returns (CreateProfilerSetRequest.Response) {
    option (google.api.http) = {
      put: "/v1/profiler-set/createProfilerSet"
      body: "*"
    };
  };

  rpc updateProfilerSet(UpdateProfilerSetRequest) returns (UpdateProfilerSetRequest.Response) {
    option (google.api.http) = {
      patch: "/v1/profile-set/updateProfileSet"
      body: "*"
    };
  };

  rpc addProfilerToSet(AddProfilerToSetRequest) returns (AddProfilerToSetRequest.Response) {
    option (google.api.http) = {
      post: "/v1/profile-set/addProfilerToSet"
      body: "*"
    };
  };

  rpc removeProfilerFromSet(RemoveProfilerFromSetRequest) returns (RemoveProfilerFromSetRequest.Response) {
    option (google.api.http) = {
      post: "/v1/profile-set/removeProfilerFromSet"
      body: "*"
    };
  };

  rpc deleteProfilerSet(DeleteProfilerSetRequest) returns (DeleteProfilerRequest.Response) {
    option (google.api.http) = {
      delete: "/v1/profile-set/deleteProfilerSet"
      body: "*"
    };
  };

  rpc listProfilerSets(ListProfilerSetsRequest) returns (ListProfilerSetsRequest.Response) {
    option (google.api.http) = {
      get: "/v1/profiler-set/listProfilersSets"
    };
  };

  rpc getProfiledModel(GetProfiledModelRequest) returns (GetProfiledModelRequest.Response) {
    option (google.api.http) = {
      get: "/v1/profiled-model/getProfiledModel"
    };
  };

  rpc createProfiledModel(CreateProfiledModelRequest) returns (CreateProfiledModelRequest.Response) {
    option (google.api.http) = {
      put: "/v1/profiled-model/createProfiledModel"
      body: "*"
    };
  };

  rpc updateProfiledModel(UpdateProfiledModelRequest) returns (UpdateProfiledModelRequest.Response) {
    option (google.api.http) = {
      patch: "/v1/profiled-model/updateProfiledModel"
      body: "*"
    };
  };

  rpc deleteProfiledModel(DeleteProfiledModelRequest) returns (DeleteProfiledModelRequest.Response) {
    option (google.api.http) = {
      delete: "/v1/profiled-model/deleteProfiledModel"
      body: "*"
    };
  };

  rpc listProfiledModels(ListProfiledModelsRequest) returns (ListProfiledModelsRequest.Response) {
    option (google.api.http) = {
      get: "/v1/profiled-model/listProfiledModels"
    };
  };

  rpc getAggregate(GetAggregateRequest) returns (GetAggregateRequest.Response) {
    option (google.api.http) = {
      get: "/v1/aggregate/getAggregate"
    };
  };

  rpc storeAggregateBatch(StoreProfiledAggregateBatchRequest) returns (StoreProfiledAggregateBatchRequest.Response) {
    option (google.api.http) = {
      put: "/v1/aggregate/storeAggregateBatch"
      body: "*"
    };
  };
}
